"""
Django settings for infraon project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import mongoengine

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-fq)dn41x8w6(322li_9k9ma8qhffk-8o#o*0si5^+n@%!z%fa+')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
	# 'django.contrib.admin',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'django.contrib.sites',
	#
	# added new app here
	'app.user_keycloak',
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	# 'django.contrib.auth.middleware.AuthenticationMiddleware',
	'app.user_keycloak.middleware.KeycloakAuthenticationMiddleware',
	#
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'infraon.urls'

# TEMPLATES = [
# 	{
# 		'BACKEND': 'django.template.backends.django.DjangoTemplates',
# 		'DIRS': [BASE_DIR / 'templates'],
# 		'APP_DIRS': True,
# 		'OPTIONS': {
# 			'context_processors': [
# 				'django.template.context_processors.request',
# 				# 'django.contrib.auth.context_processors.auth',
# 				'django.contrib.messages.context_processors.messages',
# 			],
# 		},
# 	},
# ]

WSGI_APPLICATION = 'infraon.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases


# MongoDB connection using MongoEngine
mongoengine.connect(
	db=config('MONGODB_NAME', default='django_keycloak'),
	host=config('MONGODB_HOST', default='localhost'),
	port=config('MONGODB_PORT', default=27017, cast=int),
)

DATABASES = {
	'default': {
		'ENGINE': config('DB_ENGINE', default='django.db.backends.postgresql'),
		'NAME': config('DB_NAME', default='django_db'),
		'USER': config('DB_USER', default='postgres'),
		'PASSWORD': config('DB_PASSWORD', default=''),
		'HOST': config('DB_HOST', default='localhost'),
		'PORT': config('DB_PORT', default='5432'),
	}
}


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#######
##


TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [BASE_DIR / 'templates'],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.messages.context_processors.messages',
				# Add Keycloak context processor
				'app.user_keycloak.context_processors.keycloak_auth',
			],
		},
	},
]


# AUTHENTICATION_BACKENDS = [
# 	'django.contrib.auth.backends.ModelBackend',
# ]

# Custom Authentication Backend
AUTHENTICATION_BACKENDS = [
	'app.user_keycloak.auth_backends.KeycloakAuthenticationBackend',
]


MIGRATION_MODULES = {
	'auth': None,
	# 'contenttypes': None,  # Optional: remove if you don't need content types
}


REDIS_HOST = config('REDIS_HOST', default='127.0.0.1')
REDIS_PORT = config('REDIS_PORT', default=6379, cast=int)
REDIS_PASSWORD = config('REDIS_PASSWORD', default='Infra0n')
REDIS_DB_DEFAULT = config('REDIS_DB_DEFAULT', default=0, cast=int)
REDIS_SSL = config('REDIS_SSL', default=False, cast=bool)
# REDIS_DB_DEFAULT=0
# REDIS_DB_SESSIONS=0


# Redis Cache Configuration
CACHES = {
	'default': {
		'BACKEND': 'django_redis.cache.RedisCache',
		'LOCATION': 'redis://127.0.0.1:6379/1',
		'OPTIONS': {
			'CLIENT_CLASS': 'django_redis.client.DefaultClient',
			'CONNECTION_POOL_KWARGS': {
				'max_connections': 50,
				'retry_on_timeout': True,
				'socket_keepalive': True,
				'socket_keepalive_options': {},
			},
			'SERIALIZER': 'django_redis.serializers.json.JSONSerializer',
			'COMPRESSOR': 'django_redis.compressors.zlib.ZlibCompressor',
			'IGNORE_EXCEPTIONS': False,  # Fail fast if Redis is down
			'PASSWORD': 'Infra0n',
		},
		'KEY_PREFIX': 'user_keycloak',
		'TIMEOUT': 3600,  # 1 hour default timeout
		'VERSION': 1,
	},
	# Separate cache for sessions (optional but recommended)
	'sessions': {
		'BACKEND': 'django_redis.cache.RedisCache',
		'LOCATION': 'redis://127.0.0.1:6379/2',
		'OPTIONS': {
			'CLIENT_CLASS': 'django_redis.client.DefaultClient',
			'CONNECTION_POOL_KWARGS': {
				'max_connections': 30,
				'retry_on_timeout': True,
			},
			'PASSWORD': 'Infra0n',
		},
		'KEY_PREFIX': 'keycloak_sessions',
		'TIMEOUT': 3600,
	},
}

# Redis Session Configuration
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'sessions'  # Use dedicated sessions cache
SESSION_COOKIE_AGE = 3600  # 1 hour
SESSION_SAVE_EVERY_REQUEST = True
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_SECURE = False  # Set to True in production with HTTPS
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_NAME = 'keycloak_sessionid'  # Custom session cookie name


# settings.py

# Keycloak Configuration
KEYCLOAK_CONFIG = {
	# Basic Keycloak Server Settings
	'SERVER_URL': 'http://localhost:8081',
	'REALM': 'django-app',
	'CLIENT_ID': 'django-client',
	'CLIENT_SECRET': '90h0rc6VZhHE7VfPAvJjq61A96UvOM9r',  # Replace with actual secret from Keycloak
	# OpenID Connect Endpoints
	'AUTHORIZATION_URL': 'http://localhost:8081/realms/django-app/protocol/openid-connect/auth',
	'TOKEN_URL': 'http://localhost:8081/realms/django-app/protocol/openid-connect/token',
	'USERINFO_URL': 'http://localhost:8081/realms/django-app/protocol/openid-connect/userinfo',
	'JWKS_URL': 'http://localhost:8081/realms/django-app/protocol/openid-connect/certs',
	'LOGOUT_URL': 'http://localhost:8081/realms/django-app/protocol/openid-connect/logout',
	'INTROSPECT_URL': 'http://localhost:8081/realms/django-app/protocol/openid-connect/token/introspect',
	# JWT Token Settings
	'ALGORITHMS': ['RS256'],
	'AUDIENCE': None,
	#  'AUDIENCE': 'django-client',
	'ISSUER': 'http://localhost:8081/realms/django-app',
	# Token Lifetime Settings
	'ACCESS_TOKEN_LIFETIME': 15 * 60,  # 15 minutes
	'REFRESH_TOKEN_LIFETIME': 24 * 60 * 60,  # 24 hours
	# JWT Validation Settings
	'VERIFY_SIGNATURE': True,
	'VERIFY_EXP': True,
	'VERIFY_AUD': True,
	'VERIFY_ISS': True,
	'LEEWAY': 10,  # 10 seconds leeway for clock skew
	# OAuth2 Settings
	'SCOPE': 'openid profile email',
	'RESPONSE_TYPE': 'code',
	'GRANT_TYPE': 'authorization_code',
	# Redis-specific caching settings
	'CACHE_JWKS': True,  # Cache Keycloak public keys
	'JWKS_CACHE_TIMEOUT': 3600,  # Cache JWKS for 1 hour
	'USER_INFO_CACHE_TIMEOUT': 300,  # Cache user info for 5 minutes
}
