"""
Django settings for infraon project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import mongoengine

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config('SECRET_KEY', default='django-insecure-fq)dn41x8w6(322li_9k9ma8qhffk-8o#o*0si5^+n@%!z%fa+')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', default=False, cast=bool)

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.sessions',
	'django.contrib.messages',
	'django.contrib.staticfiles',
	'django.contrib.sites',
	# auth apps from package
	'allauth',
	'allauth.account',
	'allauth.socialaccount',
	'allauth.socialaccount.providers.openid_connect',
	# custom api
	'api',
	'mongoengine',
]

MIDDLEWARE = [
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
	'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'infraon.urls'

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [BASE_DIR / 'templates'],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
			],
		},
	},
]

WSGI_APPLICATION = 'infraon.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases


# MongoDB connection using MongoEngine
mongoengine.connect(
	db=config('MONGODB_NAME', default='django_keycloak'),
	host=config('MONGODB_HOST', default='localhost'),
	port=config('MONGODB_PORT', default=27017, cast=int),
)

DATABASES = {
	'default': {
		'ENGINE': config('DB_ENGINE', default='django.db.backends.postgresql'),
		'NAME': config('DB_NAME', default='django_db'),
		'USER': config('DB_USER', default='postgres'),
		'PASSWORD': config('DB_PASSWORD', default=''),
		'HOST': config('DB_HOST', default='localhost'),
		'PORT': config('DB_PORT', default='5432'),
	}
}

AUTHENTICATION_BACKENDS = [
	'django.contrib.auth.backends.ModelBackend',
	'allauth.account.auth_backends.AuthenticationBackend',
]


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


SITE_ID = 1


# Allauth settings
ACCOUNT_LOGIN_METHODS = {'email'}
ACCOUNT_SIGNUP_FIELDS = ['email*', 'password1*', 'password2*']

ACCOUNT_EMAIL_VERIFICATION = 'none'
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
SOCIALACCOUNT_AUTO_SIGNUP = True
SOCIALACCOUNT_EMAIL_VERIFICATION = 'none'


# KEYCLOAK_SERVER_URL=http://localhost:8081
# KEYCLOAK_REALM=django
# KEYCLOAK_CLIENT_ID=django-client
# KEYCLOAK_CLIENT_SECRET=bhhug3Xkpep2cvkGdgopYv4eJKxWh9XS
SOCIALACCOUNT_PROVIDERS = {
	'openid_connect': {
		'APPS': [
			{
				'provider_id': 'keycloak',
				'name': 'Keycloak',
				'client_id': config('KEYCLOAK_CLIENT_ID', default='django-client'),
				'secret': config('KEYCLOAK_CLIENT_SECRET', default='bhhug3Xkpep2cvkGdgopYv4eJKxWh9XS'),
				# 'settings': {
				# 	'server_url': config('KEYCLOAK_SERVER_URL', default='http://localhost:8081'),
				# 	'realm_name': config('KEYCLOAK_REALM', default='django'),
				# },
				'settings': {
					'server_url': f'{config("KEYCLOAK_SERVER_URL", default="http://localhost:8080")}/realms/{config("KEYCLOAK_REALM", default="master")}',  # noqa: E501
				},
			}
		]
	}
}
